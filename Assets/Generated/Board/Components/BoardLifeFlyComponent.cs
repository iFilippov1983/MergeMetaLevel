//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BoardEntity {

    public LifeFlyComponent lifeFly { get { return (LifeFlyComponent)GetComponent(BoardComponentsLookup.LifeFly); } }
    public bool hasLifeFly { get { return HasComponent(BoardComponentsLookup.LifeFly); } }

    public void AddLifeFly(int newLifesContain, int newX, int newY) {
        var index = BoardComponentsLookup.LifeFly;
        var component = (LifeFlyComponent)CreateComponent(index, typeof(LifeFlyComponent));
        component.lifesContain = newLifesContain;
        component.x = newX;
        component.y = newY;
        AddComponent(index, component);
    }

    public void ReplaceLifeFly(int newLifesContain, int newX, int newY) {
        var index = BoardComponentsLookup.LifeFly;
        var component = (LifeFlyComponent)CreateComponent(index, typeof(LifeFlyComponent));
        component.lifesContain = newLifesContain;
        component.x = newX;
        component.y = newY;
        ReplaceComponent(index, component);
    }

    public void RemoveLifeFly() {
        RemoveComponent(BoardComponentsLookup.LifeFly);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BoardMatcher {

    static Entitas.IMatcher<BoardEntity> _matcherLifeFly;

    public static Entitas.IMatcher<BoardEntity> LifeFly {
        get {
            if (_matcherLifeFly == null) {
                var matcher = (Entitas.Matcher<BoardEntity>)Entitas.Matcher<BoardEntity>.AllOf(BoardComponentsLookup.LifeFly);
                matcher.componentNames = BoardComponentsLookup.componentNames;
                _matcherLifeFly = matcher;
            }

            return _matcherLifeFly;
        }
    }
}
