//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity ctxEntity { get { return GetGroup(GameMatcher.Ctx).GetSingleEntity(); } }
    public CtxComponent ctx { get { return ctxEntity.ctx; } }
    public bool hasCtx { get { return ctxEntity != null; } }

    public GameEntity SetCtx(Core.MergePlayerLinks newLinks, Core.CoreServices newServices, Data.MergeDynamicData newDynamicData
        , Features._Events.MergeEvents newEvents, Data.MergeVisualConfig newVisualConfig, Data.MergeRules newMergeRules,
        Data.MergeConfig newMergeConfig, Data.LevelConfig newLevelConfig) {
        if (hasCtx) {
            throw new Entitas.EntitasException("Could not set Ctx!\n" + this + " already has an entity with CtxComponent!",
                "You should check if the context already has a ctxEntity before setting it or use context.ReplaceCtx().");
        }
        var entity = CreateEntity();
        entity.AddCtx(newLinks, newServices, newDynamicData, newEvents, newVisualConfig, newMergeRules, newMergeConfig, newLevelConfig);
        return entity;
    }

    public void ReplaceCtx(Core.MergePlayerLinks newLinks, Core.CoreServices newServices, Data.MergeDynamicData newDynamicData, Features._Events.MergeEvents newEvents, Data.MergeVisualConfig newVisualConfig, Data.MergeRules newMergeRules, Data.MergeConfig newMergeConfig, Data.LevelConfig newLevelConfig) {
        var entity = ctxEntity;
        if (entity == null) {
            entity = SetCtx(newLinks, newServices, newDynamicData, newEvents, newVisualConfig, newMergeRules, newMergeConfig, newLevelConfig);
        } else {
            entity.ReplaceCtx(newLinks, newServices, newDynamicData, newEvents, newVisualConfig, newMergeRules, newMergeConfig, newLevelConfig);
        }
    }

    public void RemoveCtx() {
        ctxEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CtxComponent ctx { get { return (CtxComponent)GetComponent(GameComponentsLookup.Ctx); } }
    public bool hasCtx { get { return HasComponent(GameComponentsLookup.Ctx); } }

    public void AddCtx(Core.MergePlayerLinks newLinks, Core.CoreServices newServices, Data.MergeDynamicData newDynamicData, Features._Events.MergeEvents newEvents, Data.MergeVisualConfig newVisualConfig, Data.MergeRules newMergeRules, Data.MergeConfig newMergeConfig, Data.LevelConfig newLevelConfig) {
        var index = GameComponentsLookup.Ctx;
        var component = (CtxComponent)CreateComponent(index, typeof(CtxComponent));
        component.links = newLinks;
        component.services = newServices;
        component.dynamicData = newDynamicData;
        component.events = newEvents;
        component.visualConfig = newVisualConfig;
        component.mergeRules = newMergeRules;
        component.mergeConfig = newMergeConfig;
        component.levelConfig = newLevelConfig;
        AddComponent(index, component);
    }

    public void ReplaceCtx(Core.MergePlayerLinks newLinks, Core.CoreServices newServices, Data.MergeDynamicData newDynamicData, Features._Events.MergeEvents newEvents, Data.MergeVisualConfig newVisualConfig, Data.MergeRules newMergeRules, Data.MergeConfig newMergeConfig, Data.LevelConfig newLevelConfig) {
        var index = GameComponentsLookup.Ctx;
        var component = (CtxComponent)CreateComponent(index, typeof(CtxComponent));
        component.links = newLinks;
        component.services = newServices;
        component.dynamicData = newDynamicData;
        component.events = newEvents;
        component.visualConfig = newVisualConfig;
        component.mergeRules = newMergeRules;
        component.mergeConfig = newMergeConfig;
        component.levelConfig = newLevelConfig;
        ReplaceComponent(index, component);
    }

    public void RemoveCtx() {
        RemoveComponent(GameComponentsLookup.Ctx);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCtx;

    public static Entitas.IMatcher<GameEntity> Ctx {
        get {
            if (_matcherCtx == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Ctx);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCtx = matcher;
            }

            return _matcherCtx;
        }
    }
}
