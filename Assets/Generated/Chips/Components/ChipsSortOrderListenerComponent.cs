//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ChipsEntity {

    public SortOrderListenerComponent sortOrderListener { get { return (SortOrderListenerComponent)GetComponent(ChipsComponentsLookup.SortOrderListener); } }
    public bool hasSortOrderListener { get { return HasComponent(ChipsComponentsLookup.SortOrderListener); } }

    public void AddSortOrderListener(System.Collections.Generic.List<ISortOrderListener> newValue) {
        var index = ChipsComponentsLookup.SortOrderListener;
        var component = (SortOrderListenerComponent)CreateComponent(index, typeof(SortOrderListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSortOrderListener(System.Collections.Generic.List<ISortOrderListener> newValue) {
        var index = ChipsComponentsLookup.SortOrderListener;
        var component = (SortOrderListenerComponent)CreateComponent(index, typeof(SortOrderListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSortOrderListener() {
        RemoveComponent(ChipsComponentsLookup.SortOrderListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ChipsMatcher {

    static Entitas.IMatcher<ChipsEntity> _matcherSortOrderListener;

    public static Entitas.IMatcher<ChipsEntity> SortOrderListener {
        get {
            if (_matcherSortOrderListener == null) {
                var matcher = (Entitas.Matcher<ChipsEntity>)Entitas.Matcher<ChipsEntity>.AllOf(ChipsComponentsLookup.SortOrderListener);
                matcher.componentNames = ChipsComponentsLookup.componentNames;
                _matcherSortOrderListener = matcher;
            }

            return _matcherSortOrderListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ChipsEntity {

    public void AddSortOrderListener(ISortOrderListener value) {
        var listeners = hasSortOrderListener
            ? sortOrderListener.value
            : new System.Collections.Generic.List<ISortOrderListener>();
        listeners.Add(value);
        ReplaceSortOrderListener(listeners);
    }

    public void RemoveSortOrderListener(ISortOrderListener value, bool removeComponentWhenEmpty = true) {
        var listeners = sortOrderListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveSortOrderListener();
        } else {
            ReplaceSortOrderListener(listeners);
        }
    }
}
