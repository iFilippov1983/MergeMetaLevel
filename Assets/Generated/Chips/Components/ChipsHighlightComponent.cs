//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ChipsEntity {

    public HighlightComponent highlight { get { return (HighlightComponent)GetComponent(ChipsComponentsLookup.Highlight); } }
    public bool hasHighlight { get { return HasComponent(ChipsComponentsLookup.Highlight); } }

    public void AddHighlight(int newX, int newY) {
        var index = ChipsComponentsLookup.Highlight;
        var component = (HighlightComponent)CreateComponent(index, typeof(HighlightComponent));
        component.x = newX;
        component.y = newY;
        AddComponent(index, component);
    }

    public void ReplaceHighlight(int newX, int newY) {
        var index = ChipsComponentsLookup.Highlight;
        var component = (HighlightComponent)CreateComponent(index, typeof(HighlightComponent));
        component.x = newX;
        component.y = newY;
        ReplaceComponent(index, component);
    }

    public void RemoveHighlight() {
        RemoveComponent(ChipsComponentsLookup.Highlight);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ChipsMatcher {

    static Entitas.IMatcher<ChipsEntity> _matcherHighlight;

    public static Entitas.IMatcher<ChipsEntity> Highlight {
        get {
            if (_matcherHighlight == null) {
                var matcher = (Entitas.Matcher<ChipsEntity>)Entitas.Matcher<ChipsEntity>.AllOf(ChipsComponentsLookup.Highlight);
                matcher.componentNames = ChipsComponentsLookup.componentNames;
                _matcherHighlight = matcher;
            }

            return _matcherHighlight;
        }
    }
}
