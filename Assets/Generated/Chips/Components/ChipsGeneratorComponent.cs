//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ChipsEntity {

    static readonly GeneratorComponent generatorComponent = new GeneratorComponent();

    public bool isGenerator {
        get { return HasComponent(ChipsComponentsLookup.Generator); }
        set {
            if (value != isGenerator) {
                var index = ChipsComponentsLookup.Generator;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : generatorComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ChipsMatcher {

    static Entitas.IMatcher<ChipsEntity> _matcherGenerator;

    public static Entitas.IMatcher<ChipsEntity> Generator {
        get {
            if (_matcherGenerator == null) {
                var matcher = (Entitas.Matcher<ChipsEntity>)Entitas.Matcher<ChipsEntity>.AllOf(ChipsComponentsLookup.Generator);
                matcher.componentNames = ChipsComponentsLookup.componentNames;
                _matcherGenerator = matcher;
            }

            return _matcherGenerator;
        }
    }
}
