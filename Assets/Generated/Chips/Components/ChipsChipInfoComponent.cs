//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ChipsEntity {

    public ChipInfoComponent chipInfo { get { return (ChipInfoComponent)GetComponent(ChipsComponentsLookup.ChipInfo); } }
    public bool hasChipInfo { get { return HasComponent(ChipsComponentsLookup.ChipInfo); } }

    public void AddChipInfo(Data.MergeItemProfileData newData, Data.MergeItemConfig newConfig) {
        var index = ChipsComponentsLookup.ChipInfo;
        var component = (ChipInfoComponent)CreateComponent(index, typeof(ChipInfoComponent));
        component.data = newData;
        component.config = newConfig;
        AddComponent(index, component);
    }

    public void ReplaceChipInfo(Data.MergeItemProfileData newData, Data.MergeItemConfig newConfig) {
        var index = ChipsComponentsLookup.ChipInfo;
        var component = (ChipInfoComponent)CreateComponent(index, typeof(ChipInfoComponent));
        component.data = newData;
        component.config = newConfig;
        ReplaceComponent(index, component);
    }

    public void RemoveChipInfo() {
        RemoveComponent(ChipsComponentsLookup.ChipInfo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ChipsMatcher {

    static Entitas.IMatcher<ChipsEntity> _matcherChipInfo;

    public static Entitas.IMatcher<ChipsEntity> ChipInfo {
        get {
            if (_matcherChipInfo == null) {
                var matcher = (Entitas.Matcher<ChipsEntity>)Entitas.Matcher<ChipsEntity>.AllOf(ChipsComponentsLookup.ChipInfo);
                matcher.componentNames = ChipsComponentsLookup.componentNames;
                _matcherChipInfo = matcher;
            }

            return _matcherChipInfo;
        }
    }
}
